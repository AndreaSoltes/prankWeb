version: "3.8"
services:
  gateway:
    build:
      context: ./
      dockerfile: ./api-gateway/Dockerfile
      args:
        GOOGLE_ANALYTIS: "UA-136777636-1"
    depends_on:
#      - rabbitmq
      - api-server
    restart: unless-stopped
    ports:
      - "8020:80"
#  rabbitmq:
#    build:
#      context: ./
#      dockerfile: ./rabbitmq/Dockerfile
#    hostname: "rabbitmq"
#    environment:
#      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
#      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}
#    restart: unless-stopped
#    volumes:
#      - rabbitmq:/var/lib/rabbitmq/mnesia/
  api-server:
    build:
      context: ./
      dockerfile: ./web-server/Dockerfile
      args:
        UID: ${UID}
        GID: ${GID}
#    depends_on:
#      - rabbitmq
    environment:
#      CELERY_BROKER_URL: "amqp://${RABBITMQ_DEFAULT_USER}:${RABBITMQ_DEFAULT_PASS}@rabbitmq:5672"
      PRANKWEB_DATA: "/data/prankweb"
      restart: unless-stopped
    volumes:
      - predictions:/data/prankweb
  executor:
    build:
      context: ./
      dockerfile: ./executor/Dockerfile
      args:
        UID: ${UID}
        GID: ${GID}
    depends_on:
      - rabbitmq
    environment:
#      CELERY_BROKER_URL: "amqp://${RABBITMQ_DEFAULT_USER}:${RABBITMQ_DEFAULT_PASS}@rabbitmq:5672"
      restart: unless-stopped
    volumes:
      - conservation:/data/conservation
      - predictions:/data/prankweb
  monitor:
    build:
      context: ./
      dockerfile: ./monitor/Dockerfile
    environment:
      GOOGLE_ANALYTICS: "UA-136777636-2"
    restart: unless-stopped
volumes:
  rabbitmq:
    external: True
    name: prankweb_rabbitmq
  conservation:
    external: True
    name: prankweb_conservation
  predictions:
    external: True
    name: prankweb_predictions
