server {
    listen 80;
    listen [::]:80;

    # This is the internal Docker DNS, cache only for 30s.
    resolver 127.0.0.11 valid=30s;

    root /opt/prankweb-frontend;

    client_max_body_size 4M;

    # This prevents nginx to check at the start and fail if the monitor
    # is not running we store URL in a variable.
    set $monitor_server http://monitor:8021;
    location /api/v1/monitor/view {
        include cors.conf;
        proxy_pass $monitor_server/api/v1/view;
    }

    set $monitor_server http://monitor:8021;
    location /service/rabbitmq {
        include cors.conf;
        proxy_pass http://rabbitmq:15672;
        proxy_pass_request_headers on;
    }

    location /api/v2 {
        include cors.conf;
        proxy_pass http://api-server:8020/api/v2;
        proxy_pass_request_headers on;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    # Redirect legacy paths from PDBe:
    # 	.../analyze/id/6LU7 -> .../analyze?database=v1-conservation&code=6LU7
    location ~ /analyze/id_noconser/.+ {
	    rewrite ^/analyze/id_noconser/(.+)$ /analyze?database=v1&code=$1 redirect;
    }
    location ~ /analyze/id_nonconser/.+ {
	    rewrite ^/analyze/id_nonconser/(.+)$ /analyze?database=v1&code=$1 redirect;
    }
    location ~ /analyze/id/.+ {
	    rewrite ^/analyze/id/(.+)$ /analyze?database=v1-conservation&code=$1 redirect;
    }

    location / {
        index index.html;
        try_files $uri $uri/ $uri.html =404;
    }

}

